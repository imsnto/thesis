{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8184225,"sourceType":"datasetVersion","datasetId":4845927},{"sourceId":8214781,"sourceType":"datasetVersion","datasetId":4868915}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import os\nimport shutil\nimport warnings\nimport numpy as np \nimport pandas as pd \n\nimport cv2\nimport nibabel as nib\nfrom PIL import Image\nfrom skimage import exposure\nfrom skimage.transform import resize\nfrom skimage.measure import shannon_entropy\nfrom scipy.ndimage import gaussian_filter\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nimport keras\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.layers import Dense, Conv2D, MaxPooling2D, Flatten, BatchNormalization, Dropout\n\nfrom sklearn.preprocessing import OneHotEncoder \nfrom sklearn.model_selection import train_test_split\n\nplt.style.use('dark_background') # ggplot\nwarnings.filterwarnings(\"ignore\")\n%matplotlib inline","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-31T05:51:54.874445Z","iopub.execute_input":"2024-08-31T05:51:54.874872Z","iopub.status.idle":"2024-08-31T05:51:54.888920Z","shell.execute_reply.started":"2024-08-31T05:51:54.874839Z","shell.execute_reply":"2024-08-31T05:51:54.887764Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"csv_file_path = r'/kaggle/input/adni1annual-2-yr-3t/ADNI1_Annual_2_Yr_3T_4_21_2024.csv'\ndf = pd.read_csv(csv_file_path)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-07-10T12:48:32.643396Z","iopub.execute_input":"2024-07-10T12:48:32.643991Z","iopub.status.idle":"2024-07-10T12:48:32.696437Z","shell.execute_reply.started":"2024-07-10T12:48:32.643936Z","shell.execute_reply":"2024-07-10T12:48:32.695057Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Description'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-07-10T12:49:08.283095Z","iopub.execute_input":"2024-07-10T12:49:08.283503Z","iopub.status.idle":"2024-07-10T12:49:08.300101Z","shell.execute_reply.started":"2024-07-10T12:49:08.283472Z","shell.execute_reply":"2024-07-10T12:49:08.298705Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['Group'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-07-10T12:52:30.120331Z","iopub.execute_input":"2024-07-10T12:52:30.120872Z","iopub.status.idle":"2024-07-10T12:52:30.132444Z","shell.execute_reply.started":"2024-07-10T12:52:30.120828Z","shell.execute_reply":"2024-07-10T12:52:30.131295Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[df['Description'] == 'MPR; GradWarp; B1 Correction; N3; Scaled']['Group'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-07-10T12:52:51.735682Z","iopub.execute_input":"2024-07-10T12:52:51.736175Z","iopub.status.idle":"2024-07-10T12:52:51.753559Z","shell.execute_reply.started":"2024-07-10T12:52:51.736142Z","shell.execute_reply":"2024-07-10T12:52:51.752346Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"subject_mci = df[df['Group'] == 'MCI']['Subject'].tolist()\nsubject_ad  =  df[df['Group'] == 'AD']['Subject'].tolist()\nsubject_cn  =  df[df['Group'] == 'CN']['Subject'].tolist()\n\nprint(f\"MCI: {len(subject_mci)} \\nAD: {len(subject_ad)} \\nCN: {len(subject_cn)}\")","metadata":{"execution":{"iopub.status.busy":"2024-07-10T12:53:23.382686Z","iopub.execute_input":"2024-07-10T12:53:23.383111Z","iopub.status.idle":"2024-07-10T12:53:23.394124Z","shell.execute_reply.started":"2024-07-10T12:53:23.383080Z","shell.execute_reply":"2024-07-10T12:53:23.392723Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-10T12:53:32.673675Z","iopub.execute_input":"2024-07-10T12:53:32.674184Z","iopub.status.idle":"2024-07-10T12:53:32.682034Z","shell.execute_reply.started":"2024-07-10T12:53:32.674141Z","shell.execute_reply":"2024-07-10T12:53:32.680711Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from collections import defaultdict\n\n\ndef sort_dict_keys_by_value(sub_id):\n    cnt = defaultdict(int)\n    for ele in sub_id:\n        cnt[ele] += 1\n    \n    d_sorted = dict(sorted(cnt.items(), key=lambda item: item[1]))\n    return list(d_sorted.keys())\n\n\nsub_ad = sort_dict_keys_by_value(subject_ad)\nsub_cn = sort_dict_keys_by_value(subject_cn)\nsub_mci = sort_dict_keys_by_value(subject_mci)","metadata":{"execution":{"iopub.status.busy":"2024-07-10T12:58:36.984233Z","iopub.execute_input":"2024-07-10T12:58:36.984661Z","iopub.status.idle":"2024-07-10T12:58:36.992311Z","shell.execute_reply.started":"2024-07-10T12:58:36.984611Z","shell.execute_reply":"2024-07-10T12:58:36.990946Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"dataset_path = r'/kaggle/input/adni1annual-2-yr-3t/ADNI1Annual 2 Yr 3T/ADNI'\ndef get_file_path(subs):\n    file_paths = []\n    for sub in subs:\n        path_1 = os.path.join(dataset_path, sub)\n\n        for dir_1 in os.listdir(path_1):\n#             if dir_1 != \"MPR__GradWarp__B1_Correction__N3__Scaled\":\n#                 continue\n                \n            path_2 = os.path.join(path_1, dir_1)\n\n            for dir_2 in os.listdir(path_2):\n                path_3 = os.path.join(path_2, dir_2)\n\n                for dir_3 in os.listdir(path_3):\n                    path_4 = os.path.join(path_3, dir_3)\n\n                    for dir_4 in os.listdir(path_4):\n                        path_5 = os.path.join(path_4, dir_4)\n\n                        file_paths.append(path_5)\n    return file_paths\n\n\nad_file_paths = get_file_path(sub_ad)\nmci_file_paths = get_file_path(sub_mci)\ncn_file_paths = get_file_path(sub_cn)","metadata":{"execution":{"iopub.status.busy":"2024-07-10T13:00:21.861987Z","iopub.execute_input":"2024-07-10T13:00:21.862403Z","iopub.status.idle":"2024-07-10T13:00:24.150954Z","shell.execute_reply.started":"2024-07-10T13:00:21.862372Z","shell.execute_reply":"2024-07-10T13:00:24.149655Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(len(ad_file_paths))\nprint(len(cn_file_paths))\nprint(len(mci_file_paths))","metadata":{"execution":{"iopub.status.busy":"2024-07-10T13:00:28.482369Z","iopub.execute_input":"2024-07-10T13:00:28.482830Z","iopub.status.idle":"2024-07-10T13:00:28.489456Z","shell.execute_reply.started":"2024-07-10T13:00:28.482795Z","shell.execute_reply":"2024-07-10T13:00:28.488141Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"os.makedirs(\"/kaggle/working/adni1annual-2-yr-3t/train/AD\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1annual-2-yr-3t/train/CN\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1annual-2-yr-3t/train/MCI\", exist_ok=True)\n\nos.makedirs(\"/kaggle/working/adni1annual-2-yr-3t/test/AD\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1annual-2-yr-3t/test/CN\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1annual-2-yr-3t/test/MCI\", exist_ok=True)\n\nos.makedirs(\"/kaggle/working/adni1annual-2-yr-3t/val/AD\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1annual-2-yr-3t/val/CN\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1annual-2-yr-3t/val/MCI\", exist_ok=True)","metadata":{"execution":{"iopub.status.busy":"2024-07-10T13:01:59.862668Z","iopub.execute_input":"2024-07-10T13:01:59.863442Z","iopub.status.idle":"2024-07-10T13:01:59.872615Z","shell.execute_reply.started":"2024-07-10T13:01:59.863385Z","shell.execute_reply":"2024-07-10T13:01:59.871332Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def load_nifti_file(filepath):\n    img = nib.load(filepath)\n    img_data = img.get_fdata()\n    return img_data\n\ndef normalize_image(img_data):\n    img_data = (img_data - np.min(img_data)) / (np.max(img_data) - np.min(img_data))\n    return img_data\n\ndef skull_strip(image):\n    stripped_image = np.where(image >= np.mean(image), image, 0)\n    return stripped_image\n\ndef resize_image(img_data, target_shape=(128, 128, 128)):\n    img_data = resize(img_data, target_shape, mode='constant', anti_aliasing=True)\n    return img_data\n\ndef equalize_histogram(img_data):\n    img_data = exposure.equalize_hist(img_data)\n    return img_data\n\ndef smooth_image(img_data, sigma=1):\n    img_data = gaussian_filter(img_data, sigma=sigma)\n    return img_data\n\ndef smooth_image_median(img_data, size=3):\n    img_data = median_filter(img_data, size=size)\n    return img_data\n\n\ndef preprocess_image(filepath, target_shape=(128, 128, 128)):\n    img_data = load_nifti_file(filepath)\n    img_data = normalize_image(img_data)\n    img_data = skull_strip(img_data)\n    img_data = resize_image(img_data, target_shape)\n    img_data = equalize_histogram(img_data)\n    img_data = smooth_image_median(img_data)\n    return img_data","metadata":{"execution":{"iopub.status.busy":"2024-07-10T13:59:36.583732Z","iopub.execute_input":"2024-07-10T13:59:36.584206Z","iopub.status.idle":"2024-07-10T13:59:36.597178Z","shell.execute_reply.started":"2024-07-10T13:59:36.584171Z","shell.execute_reply":"2024-07-10T13:59:36.595522Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def slice_mri_images(input_paths, class_name, output_path):\n    for idx, file_path in enumerate(input_paths):\n        data = preprocess_image(file_path)\n        for i in range(data.shape[0]):\n\n            sub = file_path.split('/')[6] + \"_\" + file_path.split('/')[9]\n            # Save the slice as JPEG\n            if idx < 12:\n                output_file = os.path.join(output_path, 'test', class_name, f\"{i+1}_{sub}.jpg\")\n            elif idx < 24:\n                output_file = os.path.join(output_path, 'val', class_name, f\"{i+1}_{sub}.jpg\")\n            else:\n                output_file = os.path.join(output_path, 'train', class_name, f\"{i+1}_{sub}.jpg\")\n            plt.imsave(output_file, data[i], cmap='gray')\n            ","metadata":{"execution":{"iopub.status.busy":"2024-07-10T14:01:57.139014Z","iopub.execute_input":"2024-07-10T14:01:57.139463Z","iopub.status.idle":"2024-07-10T14:01:57.149272Z","shell.execute_reply.started":"2024-07-10T14:01:57.139426Z","shell.execute_reply":"2024-07-10T14:01:57.147966Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"output_path = r\"/kaggle/working/adni1annual-2-yr-3t\"\n\nslice_mri_images(ad_file_paths, \"AD\", output_path)\nslice_mri_images(cn_file_paths, \"CN\", output_path)\nslice_mri_images(mci_file_paths, \"MCI\", output_path)","metadata":{"execution":{"iopub.status.busy":"2024-07-10T14:01:57.932044Z","iopub.execute_input":"2024-07-10T14:01:57.933034Z","iopub.status.idle":"2024-07-10T14:12:07.170693Z","shell.execute_reply.started":"2024-07-10T14:01:57.932966Z","shell.execute_reply":"2024-07-10T14:12:07.168779Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"shutil.make_archive('adni1annual-2-yr-3t', 'zip', '/kaggle/working/adni1annual-2-yr-3t')","metadata":{"execution":{"iopub.status.busy":"2024-07-10T14:13:52.404423Z","iopub.execute_input":"2024-07-10T14:13:52.405025Z","iopub.status.idle":"2024-07-10T14:14:05.207307Z","shell.execute_reply.started":"2024-07-10T14:13:52.404976Z","shell.execute_reply":"2024-07-10T14:14:05.205995Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# os.remove('/kaggle/working/data.zip')","metadata":{"execution":{"iopub.status.busy":"2024-07-10T14:14:08.185289Z","iopub.execute_input":"2024-07-10T14:14:08.185771Z","iopub.status.idle":"2024-07-10T14:14:08.194509Z","shell.execute_reply.started":"2024-07-10T14:14:08.185736Z","shell.execute_reply":"2024-07-10T14:14:08.192942Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# shutil.rmtree('/kaggle/working/axial')","metadata":{"execution":{"iopub.status.busy":"2024-07-10T14:14:08.400879Z","iopub.execute_input":"2024-07-10T14:14:08.401353Z","iopub.status.idle":"2024-07-10T14:14:08.407119Z","shell.execute_reply.started":"2024-07-10T14:14:08.401314Z","shell.execute_reply":"2024-07-10T14:14:08.405731Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# **ADNI_1_Complete_1_Year_1.5_T**","metadata":{}},{"cell_type":"code","source":"csv_file_path = r'/kaggle/input/adni1complete-1yr-1-5t/ADNI1_Complete_1Yr_1.5T_4_24_2024.csv'\ndf = pd.read_csv(csv_file_path)\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:21.976888Z","iopub.execute_input":"2024-08-31T06:04:21.977334Z","iopub.status.idle":"2024-08-31T06:04:22.009633Z","shell.execute_reply.started":"2024-08-31T06:04:21.977299Z","shell.execute_reply":"2024-08-31T06:04:22.008279Z"},"trusted":true},"execution_count":44,"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"  Image Data ID     Subject Group Sex  Age Visit Modality  \\\n0       I112538  941_S_1311   MCI   M   70   m12      MRI   \n1        I97341  941_S_1311   MCI   M   70   m06      MRI   \n2        I97327  941_S_1311   MCI   M   69    sc      MRI   \n3        I75150  941_S_1202    CN   M   78   m06      MRI   \n4       I105437  941_S_1202    CN   M   79   m12      MRI   \n\n                                  Description       Type   Acq Date Format  \\\n0    MPR; GradWarp; B1 Correction; N3; Scaled  Processed  6/01/2008  NiFTI   \n1  MPR-R; GradWarp; B1 Correction; N3; Scaled  Processed  9/27/2007  NiFTI   \n2    MPR; GradWarp; B1 Correction; N3; Scaled  Processed  3/02/2007  NiFTI   \n3    MPR; GradWarp; B1 Correction; N3; Scaled  Processed  8/24/2007  NiFTI   \n4    MPR; GradWarp; B1 Correction; N3; Scaled  Processed  2/28/2008  NiFTI   \n\n  Downloaded  \n0  4/24/2024  \n1  4/24/2024  \n2  4/24/2024  \n3  4/24/2024  \n4  4/24/2024  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Image Data ID</th>\n      <th>Subject</th>\n      <th>Group</th>\n      <th>Sex</th>\n      <th>Age</th>\n      <th>Visit</th>\n      <th>Modality</th>\n      <th>Description</th>\n      <th>Type</th>\n      <th>Acq Date</th>\n      <th>Format</th>\n      <th>Downloaded</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>I112538</td>\n      <td>941_S_1311</td>\n      <td>MCI</td>\n      <td>M</td>\n      <td>70</td>\n      <td>m12</td>\n      <td>MRI</td>\n      <td>MPR; GradWarp; B1 Correction; N3; Scaled</td>\n      <td>Processed</td>\n      <td>6/01/2008</td>\n      <td>NiFTI</td>\n      <td>4/24/2024</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>I97341</td>\n      <td>941_S_1311</td>\n      <td>MCI</td>\n      <td>M</td>\n      <td>70</td>\n      <td>m06</td>\n      <td>MRI</td>\n      <td>MPR-R; GradWarp; B1 Correction; N3; Scaled</td>\n      <td>Processed</td>\n      <td>9/27/2007</td>\n      <td>NiFTI</td>\n      <td>4/24/2024</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>I97327</td>\n      <td>941_S_1311</td>\n      <td>MCI</td>\n      <td>M</td>\n      <td>69</td>\n      <td>sc</td>\n      <td>MRI</td>\n      <td>MPR; GradWarp; B1 Correction; N3; Scaled</td>\n      <td>Processed</td>\n      <td>3/02/2007</td>\n      <td>NiFTI</td>\n      <td>4/24/2024</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>I75150</td>\n      <td>941_S_1202</td>\n      <td>CN</td>\n      <td>M</td>\n      <td>78</td>\n      <td>m06</td>\n      <td>MRI</td>\n      <td>MPR; GradWarp; B1 Correction; N3; Scaled</td>\n      <td>Processed</td>\n      <td>8/24/2007</td>\n      <td>NiFTI</td>\n      <td>4/24/2024</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>I105437</td>\n      <td>941_S_1202</td>\n      <td>CN</td>\n      <td>M</td>\n      <td>79</td>\n      <td>m12</td>\n      <td>MRI</td>\n      <td>MPR; GradWarp; B1 Correction; N3; Scaled</td>\n      <td>Processed</td>\n      <td>2/28/2008</td>\n      <td>NiFTI</td>\n      <td>4/24/2024</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df['Description'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:22.555446Z","iopub.execute_input":"2024-08-31T06:04:22.555911Z","iopub.status.idle":"2024-08-31T06:04:22.566163Z","shell.execute_reply.started":"2024-08-31T06:04:22.555875Z","shell.execute_reply":"2024-08-31T06:04:22.564923Z"},"trusted":true},"execution_count":45,"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"Description\nMPR; GradWarp; B1 Correction; N3; Scaled        1138\nMPR-R; GradWarp; B1 Correction; N3; Scaled       301\nMPR; ; N3; Scaled                                200\nMPR; GradWarp; N3; Scaled                        189\nMPR; GradWarp; B1 Correction; N3; Scaled_2       165\nMPR; ; N3; Scaled_2                              143\nMPR-R; GradWarp; N3; Scaled                       66\nMPR-R; GradWarp; B1 Correction; N3; Scaled_2      50\nMPR-R; ; N3; Scaled                               22\nMPR-R; ; N3; Scaled_2                             18\nMPR; GradWarp; N3; Scaled_2                        1\nMPR-R; GradWarp; N3; Scaled_2                      1\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df['Group'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:23.099359Z","iopub.execute_input":"2024-08-31T06:04:23.099795Z","iopub.status.idle":"2024-08-31T06:04:23.109842Z","shell.execute_reply.started":"2024-08-31T06:04:23.099762Z","shell.execute_reply":"2024-08-31T06:04:23.108588Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Group\nMCI    1116\nCN      702\nAD      476\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"df[df['Description'] == 'MPR; GradWarp; B1 Correction; N3; Scaled']['Group'].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:23.628122Z","iopub.execute_input":"2024-08-31T06:04:23.628622Z","iopub.status.idle":"2024-08-31T06:04:23.640555Z","shell.execute_reply.started":"2024-08-31T06:04:23.628585Z","shell.execute_reply":"2024-08-31T06:04:23.639260Z"},"trusted":true},"execution_count":47,"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"Group\nMCI    554\nCN     347\nAD     237\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"subject_mci = df[df['Group'] == 'MCI']['Subject'].tolist()\nsubject_ad  =  df[df['Group'] == 'AD']['Subject'].tolist()\nsubject_cn  =  df[df['Group'] == 'CN']['Subject'].tolist()\n\nprint(f\"MCI: {len(subject_mci)} \\nAD: {len(subject_ad)} \\nCN: {len(subject_cn)}\")","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:24.550833Z","iopub.execute_input":"2024-08-31T06:04:24.551253Z","iopub.status.idle":"2024-08-31T06:04:24.564410Z","shell.execute_reply.started":"2024-08-31T06:04:24.551219Z","shell.execute_reply":"2024-08-31T06:04:24.563338Z"},"trusted":true},"execution_count":48,"outputs":[{"name":"stdout","text":"MCI: 1116 \nAD: 476 \nCN: 702\n","output_type":"stream"}]},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:25.186510Z","iopub.execute_input":"2024-08-31T06:04:25.186925Z","iopub.status.idle":"2024-08-31T06:04:25.194476Z","shell.execute_reply.started":"2024-08-31T06:04:25.186893Z","shell.execute_reply":"2024-08-31T06:04:25.193263Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"(2294, 12)"},"metadata":{}}]},{"cell_type":"code","source":"from collections import defaultdict\n\n\ndef sort_dict_keys_by_value(sub_id):\n    cnt = defaultdict(int)\n    for ele in sub_id:\n        cnt[ele] += 1\n    \n    d_sorted = dict(sorted(cnt.items(), key=lambda item: item[1]))\n    return list(d_sorted.keys())\n\n\nsub_ad = sort_dict_keys_by_value(subject_ad)\nsub_cn = sort_dict_keys_by_value(subject_cn)\nsub_mci = sort_dict_keys_by_value(subject_mci)","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:25.666632Z","iopub.execute_input":"2024-08-31T06:04:25.667064Z","iopub.status.idle":"2024-08-31T06:04:25.675282Z","shell.execute_reply.started":"2024-08-31T06:04:25.667026Z","shell.execute_reply":"2024-08-31T06:04:25.674005Z"},"trusted":true},"execution_count":50,"outputs":[]},{"cell_type":"code","source":"dataset_path = r'/kaggle/input/adni1complete-1yr-1-5t/ADNI1Complete 1Yr 1.5T/ADNI'\ndef get_file_path(subs):\n    file_paths = []\n    for sub in subs:\n        path_1 = os.path.join(dataset_path, sub)\n\n        for dir_1 in os.listdir(path_1):\n#             if dir_1 != \"MPR__GradWarp__B1_Correction__N3__Scaled\":\n#                 continue\n                \n            path_2 = os.path.join(path_1, dir_1)\n\n            for dir_2 in os.listdir(path_2):\n                path_3 = os.path.join(path_2, dir_2)\n\n                for dir_3 in os.listdir(path_3):\n                    path_4 = os.path.join(path_3, dir_3)\n\n                    for dir_4 in os.listdir(path_4):\n                        path_5 = os.path.join(path_4, dir_4)\n\n                        file_paths.append(path_5)\n    return file_paths\n\n\nad_file_paths = get_file_path(sub_ad)\nmci_file_paths = get_file_path(sub_mci)\ncn_file_paths = get_file_path(sub_cn)","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:26.339120Z","iopub.execute_input":"2024-08-31T06:04:26.340032Z","iopub.status.idle":"2024-08-31T06:04:31.365026Z","shell.execute_reply.started":"2024-08-31T06:04:26.339993Z","shell.execute_reply":"2024-08-31T06:04:31.363869Z"},"trusted":true},"execution_count":51,"outputs":[]},{"cell_type":"code","source":"print(len(ad_file_paths))\nprint(len(cn_file_paths))\nprint(len(mci_file_paths))","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:31.369775Z","iopub.execute_input":"2024-08-31T06:04:31.370188Z","iopub.status.idle":"2024-08-31T06:04:31.376761Z","shell.execute_reply.started":"2024-08-31T06:04:31.370153Z","shell.execute_reply":"2024-08-31T06:04:31.375290Z"},"trusted":true},"execution_count":52,"outputs":[{"name":"stdout","text":"476\n702\n1116\n","output_type":"stream"}]},{"cell_type":"code","source":"os.makedirs(\"/kaggle/working/adni1complete-1yr-1-5t/train/AD\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1complete-1yr-1-5t/train/CN\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1complete-1yr-1-5t/train/MCI\", exist_ok=True)\n\nos.makedirs(\"/kaggle/working/adni1complete-1yr-1-5t/test/AD\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1complete-1yr-1-5t/test/CN\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1complete-1yr-1-5t/test/MCI\", exist_ok=True)\n\nos.makedirs(\"/kaggle/working/adni1complete-1yr-1-5t/val/AD\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1complete-1yr-1-5t/val/CN\", exist_ok=True)\nos.makedirs(\"/kaggle/working/adni1complete-1yr-1-5t/val/MCI\", exist_ok=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:35.427742Z","iopub.execute_input":"2024-08-31T06:04:35.428167Z","iopub.status.idle":"2024-08-31T06:04:35.437237Z","shell.execute_reply.started":"2024-08-31T06:04:35.428130Z","shell.execute_reply":"2024-08-31T06:04:35.436038Z"},"trusted":true},"execution_count":53,"outputs":[]},{"cell_type":"code","source":"from scipy.ndimage import median_filter\n","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:36.537294Z","iopub.execute_input":"2024-08-31T06:04:36.537739Z","iopub.status.idle":"2024-08-31T06:04:36.543059Z","shell.execute_reply.started":"2024-08-31T06:04:36.537701Z","shell.execute_reply":"2024-08-31T06:04:36.541746Z"},"trusted":true},"execution_count":54,"outputs":[]},{"cell_type":"code","source":"def load_nifti_file(filepath):\n    img = nib.load(filepath)\n    img_data = img.get_fdata()\n    return img_data\n\ndef normalize_image(img_data):\n    img_data = (img_data - np.min(img_data)) / (np.max(img_data) - np.min(img_data))\n    return img_data\n\ndef skull_strip(image):\n    stripped_image = np.where(image >= np.mean(image), image, 0)\n    return stripped_image\n\ndef resize_image(img_data, target_shape=(128, 128, 128)):\n    img_data = resize(img_data, target_shape, mode='constant', anti_aliasing=True)\n    return img_data\n\ndef equalize_histogram(img_data):\n    img_data = exposure.equalize_hist(img_data)\n    return img_data\n\ndef smooth_image(img_data, sigma=1):\n    img_data = gaussian_filter(img_data, sigma=sigma)\n    return img_data\n\ndef smooth_image_median(img_data, size=3):\n    img_data = median_filter(img_data, size=size)\n    return img_data\n\n\ndef preprocess_image(filepath, target_shape=(128, 128, 128)):\n    img_data = load_nifti_file(filepath)\n    img_data = normalize_image(img_data)\n    img_data = skull_strip(img_data)\n    img_data = resize_image(img_data, target_shape)\n    img_data = equalize_histogram(img_data)\n    img_data = smooth_image_median(img_data)\n    return img_data","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:04:39.823856Z","iopub.execute_input":"2024-08-31T06:04:39.824305Z","iopub.status.idle":"2024-08-31T06:04:39.836968Z","shell.execute_reply.started":"2024-08-31T06:04:39.824268Z","shell.execute_reply":"2024-08-31T06:04:39.835756Z"},"trusted":true},"execution_count":55,"outputs":[]},{"cell_type":"code","source":"def slice_mri_images(input_paths, class_name, output_path):\n    for idx, file_path in enumerate(input_paths):\n        data = preprocess_image(file_path)\n        for i in range(37, 71, 1):\n\n            sub = file_path.split('/')[6] + \"_\" + file_path.split('/')[9]\n            # Save the slice as JPEG\n            if idx < 96:\n                output_file = os.path.join(output_path, 'test', class_name, f\"{i+1}_{sub}.jpg\")\n            elif idx < 192:\n                output_file = os.path.join(output_path, 'val', class_name, f\"{i+1}_{sub}.jpg\")\n            else:\n                output_file = os.path.join(output_path, 'train', class_name, f\"{i+1}_{sub}.jpg\")\n            plt.imsave(output_file, data[i], cmap='gray')\n            ","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:05:01.532466Z","iopub.execute_input":"2024-08-31T06:05:01.532894Z","iopub.status.idle":"2024-08-31T06:05:01.543059Z","shell.execute_reply.started":"2024-08-31T06:05:01.532861Z","shell.execute_reply":"2024-08-31T06:05:01.541400Z"},"trusted":true},"execution_count":56,"outputs":[]},{"cell_type":"code","source":"output_path = r\"/kaggle/working/adni1complete-1yr-1-5t\"\n\nslice_mri_images(ad_file_paths, \"AD\", output_path)\nslice_mri_images(cn_file_paths, \"CN\", output_path)\nslice_mri_images(mci_file_paths, \"MCI\", output_path)","metadata":{"execution":{"iopub.status.busy":"2024-08-31T06:05:08.863548Z","iopub.execute_input":"2024-08-31T06:05:08.863960Z","iopub.status.idle":"2024-08-31T07:22:01.065171Z","shell.execute_reply.started":"2024-08-31T06:05:08.863927Z","shell.execute_reply":"2024-08-31T07:22:01.060711Z"},"trusted":true},"execution_count":57,"outputs":[]},{"cell_type":"code","source":"shutil.make_archive('adni1complete-1yr-1-5t', 'zip', '/kaggle/working/adni1complete-1yr-1-5t')","metadata":{"execution":{"iopub.status.busy":"2024-08-31T07:34:36.187026Z","iopub.execute_input":"2024-08-31T07:34:36.188839Z","iopub.status.idle":"2024-08-31T07:36:06.984831Z","shell.execute_reply.started":"2024-08-31T07:34:36.188770Z","shell.execute_reply":"2024-08-31T07:36:06.983266Z"},"trusted":true},"execution_count":58,"outputs":[{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"'/kaggle/working/adni1complete-1yr-1-5t.zip'"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}